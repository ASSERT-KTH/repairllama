{"identifier": "traccar-traccar-3771dd156efb", "patch": "    private Position decodePosition(DeviceSession deviceSession, String data) {\n        Parser parser = new Parser(PATTERN_POSITION, data);\n        if (!parser.matches()) {\n            return null;\n        }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        position.setTime(parser.nextDateTime(Parser.DateTimeFormat.DMY_HMS));\n        position.setValid(parser.next().equals(\"A\"));\n        position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble(0)));\n        position.setCourse(parser.nextDouble(0));\n        position.setAltitude(parser.nextDouble(0));\n        position.set(Position.KEY_SATELLITES, parser.nextInt(0));\n        position.set(Position.KEY_RSSI, parser.nextInt(0));\n        position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt(0));\n        position.set(Position.KEY_STEPS, parser.nextInt(0));\n        int status = parser.nextHexInt(0);\n        position.set(Position.KEY_ALARM, decodeAlarm(status));\n        if (BitUtil.check(status, 4)) {\n            position.set(Position.KEY_MOTION, true);\n        }\n        String[] values = parser.next().split(\",\");\n        int index = 0;\n        for (int i = 0; i < values.length; i++) {\n            String value = values[i];\n            switch (index) {\n                case 0:\n                    position.set(Position.KEY_INPUT, value);\n                    break;\n                case 1:\n                    position.set(Position.KEY_OUTPUT, value);\n                    break;\n            }\n            index++;\n        }\n        return position;\n    }\n", "result": 0}