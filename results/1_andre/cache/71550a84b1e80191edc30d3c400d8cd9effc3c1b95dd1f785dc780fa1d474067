{"identifier": "TheAlgorithms-Java-e5c7a08874a6", "patch": "public static int postfixEvaluate(final String exp) {\n    Stack<Integer> s = new Stack<Integer>();\n    Scanner tokens = new Scanner(exp);\n    while (tokens.hasNext()) {\n        if (tokens.hasNextInt()) {\n            s.push(tokens.nextInt()); \n        } else { \n            String op = tokens.next();\n            if (s.size() < 2) {\n                throw new IllegalArgumentException(\"exp is not a proper postfix expression.\");\n            }\n            int num2 = s.pop();\n            int num1 = s.pop();\n            switch (op) {\n                case \"+\" -> s.push(num1 + num2);\n                case \"-\" -> s.push(num1 - num2);\n                case \"*\" -> s.push(num1 * num2);\n                case \"/\" -> s.push(num1 / num2);\n                default -> throw new IllegalArgumentException(\"exp contains an unknown operation.\");\n            }\n        }\n    }\n    tokens.close();\n    if (s.size() != 1) {\n        throw new IllegalArgumentException(\"exp is not a proper postfix expression.\");\n    }\n    return s.pop();\n}", "result": 1}