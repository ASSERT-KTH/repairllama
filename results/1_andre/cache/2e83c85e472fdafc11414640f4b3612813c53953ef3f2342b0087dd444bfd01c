{"identifier": "traccar-traccar-3771dd156efb", "patch": "    private Position decodePosition(DeviceSession deviceSession, String data) {\n        Parser parser = new Parser(PATTERN_POSITION, data);\n        if (!parser.matches()) {\n            return null;\n        }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        position.setTime(parser.nextDateTime(Parser.DateTimeFormat.DMY_HMS));\n        position.setValid(parser.next().equals(\"A\"));\n        position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble(0)));\n        position.setCourse(parser.nextDouble(0));\n        position.setAltitude(parser.nextDouble(0));\n        position.set(Position.KEY_SATELLITES, parser.nextInt(0));\n        position.set(Position.KEY_RSSI, parser.nextInt(0));\n        position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt(0));\n        position.set(Position.KEY_STEPS, parser.nextInt(0));\n        int status = parser.nextHexInt(0);\n        position.set(Position.KEY_ALARM, decodeAlarm(status));\n        if (BitUtil.check(status, 4)) {\n            position.set(Position.KEY_MOTION, true);\n        }\n        String[] values = parser.next().split(\",\");\n        int index = 0;\n// buggy code\n//        Network network = new Network();\n//        int cellCount = Integer.parseInt(values[index++]);\n//        if (cellCount > 0) {\n//            index += 1; // timing advance\n//            int mcc = !values[index].isEmpty() ? Integer.parseInt(values[index++]) : 0;\n//            int mnc = !values[index].isEmpty() ? Integer.parseInt(values[index++]) : 0;\n//            for (int i = 0; i < cellCount; i++) {\n//                int lac = Integer.parseInt(values[index++]);\n//                int cid = Integer.parseInt(values[index++]);\n//                String rssi = values[index++];\n//                if (!rssi.isEmpty()) {\n//                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid, Integer.parseInt(rssi)));\n//                } else {\n//                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid));\n//                }\n//            }\n//        }\n//        if (index < values.length && !values[index].isEmpty()) {\n//            int wifiCount = Integer.parseInt(values[index++]);\n//            for (int i = 0; i < wifiCount; i++) {\n//                index += 1; // wifi name\n//                String macAddress = values[index++];\n//                String rssi = values[index++];\n//                if (!macAddress.isEmpty() && !macAddress.equals(\"0\") && !rssi.isEmpty()) {\n//                    network.addWifiAccessPoint(WifiAccessPoint.from(macAddress, Integer.parseInt(rssi)));\n//                }\n//            }\n//        }\n//        if (network.getCellTowers() != null || network.getWifiAccessPoints() != null) {\n//            position.setNetwork(network);\n//        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_ODOMETER, Integer.parseInt(values[index++]) * 1000);\n        }\n        return position;\n    }\n", "result": 0}