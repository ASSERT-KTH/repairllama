{"identifier": "Math-60", "patch": "    public double cumulativeProbability(double x) throws MathException {\n        final double dev = x - mean;\n// buggy code\n//        try {\n//        return 0.5 * (1.0 + Erf.erf((dev) /\n//                    (standardDeviation * FastMath.sqrt(2.0))));\n//        } catch (MaxIterationsExceededException ex) {\n//            if (x < (mean - 20 * standardDeviation)) { \n//                return 0;\n//            } else if (x > (mean + 20 * standardDeviation)) {\n//                return 1;\n//            } else {\n//                throw ex;\n//            }\n//        }\n//\n        if (x < (mean - 20 * standardDeviation)) {\n            return 0;\n        } else if (x > (mean + 20 * standardDeviation)) {\n            return 1;\n        } else {\n            return 0.5 * (1.0 + Erf.erf((dev) /\n                    (standardDeviation * FastMath.sqrt(2.0))));\n        }\n\n    }\n", "result": false}