{"identifier": "Cli-14", "patch": "    public void validate(final WriteableCommandLine commandLine)\n        throws OptionException {\n        // number of options found\n        int present = 0;\n        // reference to first unexpected option\n        Option unexpected = null;\n        for (final Iterator i = options.iterator(); i.hasNext();) {\n            final Option option = (Option) i.next();\n            // needs validation?\n            boolean validate = option.isRequired() || option instanceof Group;\n// buggy code\n//            if (validate) {\n//                option.validate(commandLine);\n//            }\n//            // if the child option is present then validate it\n//            if (commandLine.hasOption(option)) {\n//                if (++present > maximum) {\n//                    unexpected = option;\n//                    break;\n//                }\n            if (validate || commandLine.hasOption(option)) {\n                if (++present > maximum) {\n                    unexpected = option;\n                    break;\n                }\n\n                option.validate(commandLine);\n            }\n        }\n        // too many options\n        if (unexpected != null) {\n            throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,\n                                      unexpected.getPreferredName());\n        }\n        // too few option\n        if (present < minimum) {\n            throw new OptionException(this, ResourceConstants.MISSING_OPTION);\n        }\n        // validate each anonymous argument\n        for (final Iterator i = anonymous.iterator(); i.hasNext();) {\n            final Option option = (Option) i.next();\n            option.validate(commandLine);\n        }\n    }\n", "result": 0}