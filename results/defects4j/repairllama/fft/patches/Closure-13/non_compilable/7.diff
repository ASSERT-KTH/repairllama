--- 
+++ 
@@ -1,26 +1,25 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
+// buggy code
+//        traverse(c);
+//        Node next = c.getNext();
+       traverse(c);
+        Node next = c.getNextSibling();
+        if (next == null) {
+          next = c.getParentNode().getNextSibling();
+        }
+
         c = next;
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
