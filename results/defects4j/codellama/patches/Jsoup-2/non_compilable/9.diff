--- 
+++ 
@@ -1,50 +1,71 @@
     private void parseStartTag() {
         tq.consume("<");
         String tagName = tq.consumeWord();
-
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+        if (tagName.length() == 0) { 
             tq.addFirst("&lt;");
             parseTextNode();
             return;
         }
-
         Attributes attributes = new Attributes();
         while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
             Attribute attribute = parseAttribute();
             if (attribute != null)
                 attributes.put(attribute);
         }
-
         Tag tag = Tag.valueOf(tagName);
         Element child = new Element(tag, baseUri, attributes);
-
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
+        boolean isEmptyElement = tag.isEmpty(); 
+        if (tq.matchChomp("/>")) { 
             isEmptyElement = true;
         } else {
             tq.matchChomp(">");
         }
         addChildToParent(child, isEmptyElement);
-
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
         if (tag.isData()) {
             String data = tq.chompTo("</" + tagName);
             tq.chompTo(">");
-            
-            Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
-                dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
-            child.appendChild(dataNode);   
+           child.appendChild(new DataNode(data, baseUri));
+        } else if (!isEmptyElement) {
+            parseChildren(child);
+            tq.matchChomp("</" + tagName + ">");
         }
-
-        // <base href>: update the base uri
-        if (child.tagName().equals("base")) {
-            String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
-                baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+    }
+    
+    private Attribute parseAttribute() {
+        String key = tq.consumeAttributeKey();
+        if (key.length() == 0)
+            return null;
+        tq.consumeWhitespace();
+        String value = tq.consumeAttributeValue();
+        return new Attribute(key, value);
+    }
+    
+    private void parseChildren(Element child) {
+        while (!tq.matchesAny("</" + child.tagName() + ">") && !tq.isEmpty()) {
+            if (tq.matches("<")) {
+                parseStartTag();
+            } else {
+                parseTextNode();
             }
         }
     }
+    
+    private void parseTextNode() {
+        String data = tq.consumeToAny("<", "&");
+        if (data.length() == 0)
+            return;
+            Node dataNode;
+            if (tag.equals(titleTag) || tag.equals(textareaTag)) 
+                dataNode = TextNode.createFromEncoded(data, baseUri);
+            else
+                dataNode = new DataNode(data, baseUri); 
+            child.appendChild(dataNode);   
+        }
+        if (child.tagName().equals("base")) {
+            String href = child.absUrl("href");
+            if (href.length() != 0) { 
+                baseUri = href;
+                doc.setBaseUri(href); 
+            }
+        }
+    }
