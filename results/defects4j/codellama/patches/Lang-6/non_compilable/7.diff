--- 
+++ 
@@ -1,24 +1,43 @@
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
         int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
                 pos+= c.length;
                 continue;
             }
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+               pos++;
             }
         }
     }
+
+    public final void translate(CharSequence input, Appendable out) throws IOException {
+        if (out == null) {
+            throw new IllegalArgumentException("The Appendable must not be null");
+        }
+        if (input == null) {
+            return;
+        }
+        int pos = 0;
+        int len = input.length();
+        while (pos < len) {
+            int consumed = translate(input, pos, out);
+            if (consumed == 0) {
+                out.append(input.charAt(pos++));
+                continue;
+            }
+            for (int pt = 0; pt < consumed; pt++) {
+                pos++;
+            }
+        }
+    }
